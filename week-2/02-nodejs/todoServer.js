/**
  You need to create an express HTTP server in Node.js which will handle the logic of a todo list app.
  - Don't use any database, just store all the data in an array to store the todo list data (in-memory)
  - Hard todo: Try to save responses in files, so that even if u exit the app and run it again, the data remains (similar to databases)

  Each todo has a title and a description. The title is a string and the description is a string.
  Each todo should also get an unique autogenerated id every time it is created
  The expected API endpoints are defined below,
  1.GET /todos - Retrieve all todo items
    Description: Returns a list of all todo items.
    Response: 200 OK with an array of todo items in JSON format.
    Example: GET http://localhost:3000/todos
    
  2.GET /todos/:id - Retrieve a specific todo item by ID
    Description: Returns a specific todo item identified by its ID.
    Response: 200 OK with the todo item in JSON format if found, or 404 Not Found if not found.
    Example: GET http://localhost:3000/todos/123
    
  3. POST /todos - Create a new todo item
    Description: Creates a new todo item.
    Request Body: JSON object representing the todo item.
    Response: 201 Created with the ID of the created todo item in JSON format. eg: {id: 1}
    Example: POST http://localhost:3000/todos
    Request Body: { "title": "Buy groceries", "completed": false, description: "I should buy groceries" }
    
  4. PUT /todos/:id - Update an existing todo item by ID
    Description: Updates an existing todo item identified by its ID.
    Request Body: JSON object representing the updated todo item.
    Response: 200 OK if the todo item was found and updated, or 404 Not Found if not found.
    Example: PUT http://localhost:3000/todos/123
    Request Body: { "title": "Buy groceries", "completed": true }
    
  5. DELETE /todos/:id - Delete a todo item by ID
    Description: Deletes a todo item identified by its ID.
    Response: 200 OK if the todo item was found and deleted, or 404 Not Found if not found.
    Example: DELETE http://localhost:3000/todos/123

    - For any other route not defined in the server return 404

  Testing the server - run `npm run test-todoServer` command in terminal
 */
  const express = require('express');
  const bodyParser = require('body-parser');
  const  z =  require('zod');
  const fs = require("fs")
  const app = express();
  
  app.use(bodyParser.json());

  // zod to check the req middleware
  function checktheReq(req , res , next){
    let schema  =   z.object({
        title : z.string(),
        completed : z.boolean(),
        description: z.string()

      })
     
     let iscorrect  = 
     schema.safeParse(req.body);

      if(!iscorrect.success){
        res.status(404).json(iscorrect)
        return
      }
      next()
  }
  
  // get all todos 
  app.get("/todos" , (req ,  res) =>{

      res.status(200).json(JSON.parse(getAllData()))
  })  

  // post todos 
  app.post("/todos"   , checktheReq ,  (req , res)=>{


     let id  = Math.random().toString(16).slice(2);
    let body = req.body;
    body = {...body , id:id}
   let todos =JSON.parse(getAllData());
    
   let tilte =  todos.filter((e)=>e.title === body.title)
  
   if(tilte.length>0){
      res.json({
        msg:"Already added , add new one with differnet tilte"
      })
      return
   }
   
    todos.push(body)
    

    fs.writeFileSync('./todos.json' , JSON.stringify(todos))
    res.json(body)
  })

  // get todo by id
  app.get("/todo" , (req , res)=>{

  let schema = z.string();
  let id =    req.query.id; 
  
  let allTodos = JSON.parse(getAllData());
 let todo =  allTodos.filter((todo)=>todo.id==id)
  
  if(todo.length>0){
      res.json(todo[0])
  }else{
    res.status(404).json({msg : "No todo found "+id})
  }
  
  } )


  app.delete("/todo" ,(req , res)=>{
        let id = req.query.id

     let alltodos =    JSON.parse(getAllData());
    
     let data = -1
    for (let index = 0; index < alltodos.length; index++) {
      const element = alltodos[index];
      if(element.id == id){
        
        data = index;
        break;
      }
      
    }
    console.log(data);
      if(data>-1){
          alltodos.splice(data , 1);
        
         fs.writeFileSync('./todos.json' , JSON.stringify(alltodos))
         res.status(200).json({msg:"Todo removed successfully"})
      }
      else{
        res.status(404).json({msg:"No todo find " + id})

      }
  })


  function getAllData(){
    let data = 
    fs.readFileSync('./todos.json' , 'utf-8' , (err, data)=>{
          if(err){
            throw new Error("Some went wrong")
            
          }
          
          return data;
    })
    return data
  }



  app.use((err , req,res , next)=>{
    console.log(err);
    res.status(500).json({
      msg:"Something Up with the server"
    })
  })
  app.listen(3000 , ()=>{
    console.log("listing to port 3000");
  })
  module.exports = app;
